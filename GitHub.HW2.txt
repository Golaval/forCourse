GitHub. HW_2
1. На локальном репозитории сделать ветки для: Postman, Jmeter, CheckLists, Bag Reports, SQL, Charles, Mobile testing
Открыть терминал и ввести команду git branch Postman, Jmeter, CheckLists, Bag Reports, SQL, Charles, Mobile testing

2. Запушить все ветки на внешний репозиторий 
git push -u origin Postman ; git push -u origin Jmeter ; git push -u origin CheckLists ; 
git push -u origin Bag_Reports ; git push -u origin SQL ; git push -u origin Charles; git push -u origin Mobile_testing либо командой git push --all 

3. В ветке Bag Reports сделать текстовый документ со структурой баг репорта
Ввести в терминале команду git checkout Bag_Reports 
затем ввести cat > bag.txt
Структура баг репорта:
Шапка
Описание
Окружение
Дополнения
Краткое описание
Серьезность
Шаги к воспроизведению
Фактический результат
Ожидаемый результат, потом нажать Еnter, Ctrl+C

4. Запушить структуру багрепорта на внешний репозиторий
Вводим в терминал git add bag.txt, git commit -m "bag.txt", git push

5. Вмержить ветку Bag Reports в Main
Прописать в терминале git checkout main, после чего ввести команду git merge Bag_Reports
 
6. Запушить main на внешний репозиторий.
Ввести в терминал git push 

7. В ветке CheckLists набросать структуру чек листа.
Прописать в терминале git checkout CheckLists, затем ввести cat > list.txt 
Структура чек листа:
- Порядковый номер
- Формулировка задачи
- Отметка о выполнении либо статусе проверки(Один пункт включает в себя одно простое действие), потом нажать Еnter, Ctrl+C

8. Запушить структуру на внешний репозиторий
Вводим в терминал git add list.txt, git commit -m "checklist.txt", git push

9. На внешнем репозитории сделать Pull Request ветки CheckLists в main
Зайти в репозиторий в аккаунте на сайте GitHub, нажать кнопку Compare&pull request, затем нажать кнопку Merge pull request, а затем нажать кнопку Confirm merge 

10. Синхронизировать Внешнюю и Локальную ветки Main
В терминале прописать git checkout main, а затем прописать команду git pull
